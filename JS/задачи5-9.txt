5 - Предоставьте код функции task от одного аргумента x, которая возвращает промис, отвергающий с причиной 'no' если x >= 18, разрешённый в значение yes, если x < 18, либо в значение, равное сегодняшней дате в формате DD.MM.YYYY, если x == 0
 6 -  Предоставьте код async-функции task от одного аргумента x, которая возвращает в виде установленного промиса (строчное) значение свойства name переданного ей объекта (это значение само является установленным промисом)
 7 - Дан объект const o = [2, 5, 8, 11, 14, 17, 20, 23, 26, 29, 32, 35, 38, 41, 44, 47, 50, 53, 56, 59, 62, 65, 68, 71, 74, 77, 80, 83, 86, 89]; спользуйте синтаксис деструктуризации для извлечения из переменной o (которая считается данной) 28-го значения (из 30) свойства numbers в переменную, имя которой состоит из буквы n и сегодняшней даты в формате DD.MM.YYYY, с помощью одной инструкции присваивания без использования запятых, в вашем коде должно быть ровно два двоеточия и две пары фигурных скобок.
 8 - В последнем-нижнем поле напишите код функции task(name, familyname, login), которая в качестве конструктора создаёт объект с тремя собственными полями – name, familyname и login. По умолчанию значение поля login – строковое значение, равное "mylogin". Кроме того, в прототипе должен быть метод getFullName, который возвращает результат конкатенации name, familyname и восклицательного знака.
 9 -  Напишите функцию task, принимающую объект. У этого объекта есть цепочка прототипов. Т.е. у него самого есть прототип, у этого прототипа есть прототип и так далее до шага, на котором очередным прототипом оказывается null. Функция должна возвращать число ненулевых прототипов. При передаче ей значения null она должна возвращать сегодняшнюю дату в формате DD.MM.YYYY