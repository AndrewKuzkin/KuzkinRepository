const { hHelp } = require('../botty.js'); // Импортируем функцию hHelp из модуля'); // Импортируем функцию hHelp из модуля


describe('hHelp', function() {
    it('следует ответить сообщением о помощи', function() {
        // Создаем mock объект ctx с нужными свойствами
        const ctx = {
            reply: jest.fn() // Mock функции reply
        };

        // Вызываем функцию hHelp с mock объектом ctx
        hHelp(ctx);

        // Ожидаемая строка справки
        const expectedReply = 
		'-Начало работы. Регистрация и авторизация(если нужно)\n/start\n'+
'-На вопросы типа Yes/No можно отвечать полным словом или кратко(yes, no, y, n). Ввод не чувствителен к регистру\n'+
'- Информация о регистрации и авторизации\n/i\n'+
'- Показать идентификатор пользователя, с которым он зарегистрирован в телеграм\n/id\n'+
'-Полная информация о пользователе\n/ui\n'+
'- Информация о боте\n/bi\n'+
'- Деавторизация\n/da\n'+
'- Красиво выводит текущий момент при помощи библиотеки moment.js\n/moment\n'+
'- Эта справка\n/help или /h';

        // Проверяем, что функция reply была вызвана с правильным справочным сообщением
        expect(ctx.reply).toHaveBeenCalledWith(expectedReply);
    });
});

/*
В этом тесте мы импортируем функцию hHelp из модуля и создаем mock объект ctx без дополнительных свойств. Затем мы вызываем функцию hHelp с mock объектом ctx. После этого мы проверяем, что функция reply была вызвана с правильным справочным сообщением.const { Telegraf, session } = require('telegraf')
*/
